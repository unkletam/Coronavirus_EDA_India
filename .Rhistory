theme(axis.text.x = element_text(angle = 90))
ggplot(mnation , aes(x=reorder(date,totalconfirmed), y=totalconfirmed, group =1))+
theme_bw()+
geom_col()+
scale_fill_viridis(option="magma")+
labs(title = "Case through date", x="date", y="cases")+
theme(axis.text.x = element_text(angle = 90))
ggplot(mnation , aes(x=reorder(date,totalconfirmed), y=totalconfirmed, group =1))+
theme_bw()+
geom_col()+
scale_fill_brewer(palette = "Oranges")
ggplot(mnation , aes(x=reorder(date,totalconfirmed), y=totalconfirmed, group =1))+
theme_bw()+
geom_col()+
scale_fill_brewer(palette = "Oranges")+
labs(title = "Case through date", x="date", y="cases")+
theme(axis.text.x = element_text(angle = 90))
?aes
ggplot(mnation , aes(x=reorder(date,totalconfirmed), y=totalconfirmed, group =1, fill=totalconfirmed))+
theme_bw()+
geom_col()+
scale_fill_brewer(palette = "Oranges")+
labs(title = "Case through date", x="date", y="cases")+
theme(axis.text.x = element_text(angle = 90))
ggplot(mnation , aes(x=reorder(date,totalconfirmed), y=totalconfirmed, group =1))+
theme_bw()+
geom_col()+
scale_fill_brewer(palette = "Oranges")+
labs(title = "Case through date", x="date", y="cases")+
theme(axis.text.x = element_text(angle = 90))
ggplot(mnation , aes(x=reorder(date,totalconfirmed), y=totalconfirmed, group =1, fill=date))+
theme_bw()+
geom_col()+
scale_fill_brewer(palette = "Oranges")+
labs(title = "Case through date", x="date", y="cases")+
theme(axis.text.x = element_text(angle = 90))
ggplot(mnation , aes(x=reorder(date,totalconfirmed), y=totalconfirmed, group =1, fill=date))+
theme_bw()+
geom_col()+
scale_fill_viridis(option="magma")+
labs(title = "Case through date", x="date", y="cases")+
theme(axis.text.x = element_text(angle = 90))
?scale_fill_viridis
ggplot(mnation , aes(x=reorder(date,totalconfirmed), y=totalconfirmed, group =1, fill=date))+
theme_bw()+
geom_col()+
scale_fill_viridis(option="magma",discrete = FALSE)+
labs(title = "Case through date", x="date", y="cases")+
theme(axis.text.x = element_text(angle = 90))
ggplot(mnation , aes(x=reorder(date,totalconfirmed), y=totalconfirmed, group =1, fill=date))+
theme_bw()+
geom_col()+
scale_fill_viridis(option="magma",discrete = TRUE)+
labs(title = "Case through date", x="date", y="cases")+
theme(axis.text.x = element_text(angle = 90))
ggplot(mnation , aes(x=reorder(date,totalconfirmed), y=totalconfirmed, group =1, fill=date))+
theme(legend.position="none")+
theme_bw()+
geom_col()+
scale_fill_viridis(option="magma",discrete = TRUE)+
labs(title = "Case through date", x="date", y="cases")+
theme(axis.text.x = element_text(angle = 90))
ggplot(mnation , aes(x=reorder(date,totalconfirmed), y=totalconfirmed, group =1, fill=date))+
theme(legend.position="none")+
theme_bw()+
geom_col()+
scale_fill_viridis(option="magma",discrete = TRUE)+
labs(title = "Case through date", x="date", y="cases")+
theme(legend.position="none")+
theme(axis.text.x = element_text(angle = 90))
ggplot(mnation , aes(x=reorder(date,totalconfirmed), y=totalconfirmed, group =1, fill=date))+
theme_bw()+
geom_col()+
scale_fill_viridis(option="heat",discrete = TRUE)+
labs(title = "Case through date", x="date", y="cases")+
theme(legend.position="none")+
theme(axis.text.x = element_text(angle = 90))
ggplot(mnation , aes(x=reorder(date,totalconfirmed), y=totalconfirmed, group =1, fill=date))+
theme_bw()+
geom_col()+
scale_fill_viridis(option="magma",discrete = TRUE)+
labs(title = "Case through date", x="date", y="cases")+
theme(legend.position="none")+
theme(axis.text.x = element_text(angle = 90))
?scale_fill_viridis
ggplot(mnation , aes(x=reorder(date,totalconfirmed), y=totalconfirmed, group =1, fill=date))+
theme_bw()+
geom_col()+
scale_fill_viridis(option="magma",discrete = TRUE)+
labs(title = "Case through January to May", x="date", y="cases")+
theme(legend.position="none")+
theme(axis.text.x = element_text(angle = 90))
install.packages('maps')
easypackages::libraries("dplyr", "ggplot2", "tidyr", "corrplot", "corrr",
"magrittr", "e1071","ggplot2","RColorBrewer", "viridis","maps")
india <- map_data("world") %>% filter(region=="INDIA")
View(india)
ggplot() +
geom_polygon(data = india, aes(x=long, y = lat, group = group), fill="grey", alpha=0.3) +
geom_point( data=data, aes(x=long, y=lat)) +
theme_void() + ylim(50,59) + coord_map()
data <- world.cities %>% filter(country.etc=="UK")
View(data)
data <- read.csv("geo_state")
data <- read.csv("geo_state.csv")
View(data)
View(data)
geo_state <-
ggplot() +
geom_polygon(data = india, aes(x=longitude, y = latitude, group = group), fill="grey", alpha=0.3) +
geom_point( data=data, aes(x=longitude, y=latitude)) +
theme_void() + ylim(50,59) + coord_map()
data <- world.cities %>% filter(country.etc=="INDIA")
View(data)
data <- read.csv("geo_state.csv")
#data <- world.cities %>% filter(country.etc=="INDIA")
geo_state <-
ggplot() +
geom_polygon(data = india, aes(x=longitude, y = latitude, group = group), fill="grey", alpha=0.3) +
geom_point( data=data, aes(x=longitude, y=latitude)) +
theme_void()  + coord_map()
View(data)
#data <- world.cities %>% filter(country.etc=="INDIA")
geo_state <-
ggplot() +
geom_polygon(data = india, aes(x=Longitude, y = Latitude, group = group), fill="grey", alpha=0.3) +
geom_point( data=data, aes(x=Longitude, y=Latitude)) +
theme_void() + ylim(50,59) + coord_map()
geo_state <-
ggplot() +
geom_polygon(data = india, aes(x=Longitude, y = Latitude, group = group), fill="grey", alpha=0.3) +
geom_point( data=data, aes(x=Longitude, y=Latitude)) +
theme_void() + ylim(50,59) + coord_map()
state_lvl <- read.csv("state_level_latest.csv")
View(state_lvl)
View(state_lvl)
state_lvl <- state_lvl[2:]
state_lvl <- state_lvl[2:,]
state_lvl <- state_lvl[-1,]
View(state_lvl)
View(state_lvl)
View(geo_state)
View(geo_state)
geo_state<- read.csv("geo_state.csv")
View(geo_state)
View(geo_state)
View(india)
new <- inner_join(state_lvl, geo_state)
nation_lvl <- read.csv('nation_level_daily.csv')
state_lvl <- read.csv("state_level_latest.csv")
state_lvl <- state_lvl[-1,]
new <- inner_join(state_lvl, geo_state)
View(geo_state)
View(geo_state)
geo_state<- read.csv("geo_state.csv")
new <- inner_join(state_lvl, geo_state)
View(new)
new <- full_join(state_lvl, geo_state)
nation_lvl <- read.csv('nation_level_daily.csv')
state_lvl <- read.csv("state_level_latest.csv")
state_lvl <- state_lvl[-1,]
geo_state<- read.csv("geo_state.csv")
new <- full_join(state_lvl, geo_state)
View(geo_state)
View(new)
install.packages("sf")
easypackages::libraries("dplyr", "ggplot2", "tidyr", "corrplot", "corrr",
"magrittr", "e1071","ggplot2","RColorBrewer", "viridis","maps","sf")
mymap <- st_read("IND_adm/IND_adm3.shp", stringAsFactors = FALSE)
mymap <- st_read("IND_adm/IND_adm3.shp")
str(mymap)
mymap <- st_read("IND_adm/IND_adm2.shp")
str(mymap)
View(mymap)
mymap <- st_read("IND_adm/IND_adm2.shp")
View(mymap)
View(new)
View(new)
View(new)
ggplot(new)+
geom_sf(aes(fill=confirmed))
str(mymap)
ggplot(new)+
geom_sf(aes(fill=confirmed))
?stat_sf
ggplot(new)+
geom_sf(aes(fill=confirmed, geom = "rect"))
?stat_sf
str(mymap)
new <- inner_join(new,mymap)
View(mymap)
View(geo_state)
mymap <- st_read("IND_adm/IND_adm2.shp")
str(mymap)
new <- inner_join(new,mymap)
mymap <- st_read("IND_adm/IND_adm1.shp")
str(mymap)
mymap %>%
rename(
NAME_1 = state
)
mymap %>%
rename(
state = NAME_1
)
new <- inner_join(new,mymap)
mymap <- st_read("output.shp")
ggplot(mymap)+
geom_sf()
ggplot(mymap)+
theme_bw()+
geom_sf()
ggplot(new)+
geom_sf()
mymap <- st_read("IND_adm/IND_adm1.shp")
str(mymap)
ggplot(new)+
geom_sf()
mymap <- st_read("output.shp")
str(mymap)
ggplot(new)+
geom_sf()
mymap <- st_read("IND_adm/IND_adm1.shp")
str(mymap)
ggplot(new)+
geom_sf()
ggplot(mymap)+
geom_sf()
ggplot(mymap)+
theme_bw()+
geom_sf()
View(state_lvl)
View(data)
View(state_lvl)
View(new)
View(new)
View(new)
View(new)
View(new)
View(new)
View(new)
ggplot(mymap)+
theme_bw()+
geom_sf()+
geom_point( data = new, aes(x=longitude, y=latitude, size=pop, color=pop), alpha=0.9)
ggplot(mymap)+
theme_bw()+
geom_sf()+
geom_point( data = new, aes(x=longitude, y=latitude, size=confirmed, color=confirmed), alpha=0.9)
ggplot(mymap)+
theme_bw()+
geom_sf()+
geom_point( data = new, aes(x=longitude, y=latitude, size=confirmed, color=confirmed), alpha=0.9)+
scale_size_continuous(range=c(1,15))
ggplot(mymap)+
theme_bw()+
geom_sf()+
geom_point( data = new, aes(x=longitude, y=latitude, size=confirmed, color=confirmed), alpha=0.9)+
scale_size_continuous(range=c(1,20))
?scale_alpha_continuous
ggplot(mymap)+
theme_bw()+
geom_sf()+
geom_point( data = new, aes(x=longitude, y=latitude, size=confirmed, color=confirmed), alpha=0.9)+
scale_color_viridis(option="inferno", trans="log" ) +
scale_size_continuous(range=c(1,20))
?scale_color_viridis
ggplot(mymap)+
theme_bw()+
geom_sf()+
geom_point( data = new, aes(x=longitude, y=latitude, size=confirmed, color=confirmed), alpha=0.9)+
scale_color_viridis(option="inferno", trans="log", direction = -1 ) +
scale_size_continuous(range=c(1,20))
ggplot(mymap)+
theme_bw()+
geom_sf()+
geom_point( data = new, aes(x=longitude, y=latitude, size=confirmed, color=confirmed), alpha=0.9)+
scale_color_viridis(option="inferno", trans="log", direction = -1 ) +
scale_size_continuous(range=c(1,20))+
coord_map()
ggplot(mymap)+
theme_bw()+
geom_sf()+
geom_point( data = new, aes(x=longitude, y=latitude, size=confirmed, color=confirmed), alpha=0.9)+
scale_color_viridis(option="inferno", trans="log", direction = -1 ) +
scale_size_continuous(range=c(1,20))
options(scipen=999)
ggplot(mymap)+
theme_bw()+
geom_sf()+
geom_point( data = new, aes(x=longitude, y=latitude, size=confirmed, color=confirmed), alpha=0.9)+
scale_color_viridis(option="inferno", trans="log", direction = -1 ) +
scale_size_continuous(range=c(1,20))
View(state_lvl)
View(mnation)
View(data)
View(nation_lvl)
View(mnation)
ggplot(mnation, aes(x=date))+
geom_line(y= confirmed)
View(mnation)
ggplot(mnation, aes(x=date))+
geom_line(y= totalconfirmed)
ggplot(mnation, aes(x=reorder(date,totalconfirmed)))+
geom_line(y= mnation$totalconfirmed)
ggplot(mnation, aes(x=reorder(date,totalconfirmed),group =1))+
geom_line(y= mnation$totalconfirmed)
ggplot(mnation, aes(x=reorder(date,totalconfirmed),group =1))+
geom_line(y= mnation$totalconfirmed)+
theme(axis.text.x = element_text(angle = 90))
ggplot(mnation, aes(x=reorder(date,totalconfirmed),group =1))+
geom_line(y=totalconfirmed)+
theme(axis.text.x = element_text(angle = 90))
?geom_line
ggplot(mnation, aes(x=reorder(date,totalconfirmed),group =1))+
geom_line(data = mnation, y=totalconfirmed)+
theme(axis.text.x = element_text(angle = 90))
#death,recovery,case rates
ggplot(mnation, aes(x=date)) +
geom_line(aes(y = totalconfirmed), color = "darkred") +
geom_line(aes(y = totaldeceased), color="steelblue", linetype="twodash")
#death,recovery,case rates
ggplot(mnation, aes(x=date), fill=date) +
geom_line(aes(y = totalconfirmed), color = "darkred") +
geom_line(aes(y = totaldeceased), color="steelblue", linetype="twodash")
#death,recovery,case rates
ggplot(mnation, aes(x=reorder(date,totalconfirmed),group =1)) +
geom_line(aes(y = totalconfirmed), color = "darkred") +
geom_line(aes(y = totaldeceased), color="steelblue", linetype="twodash")
#death,recovery,case rates
ggplot(mnation, aes(x=reorder(date,totalconfirmed),group =1)) +
geom_line(aes(y = totalconfirmed), color = "darkred") +
geom_line(aes(y = totaldeceased), color="steelblue", linetype="twodash")+
theme(axis.text.x = element_text(angle = 90))
#death,recovery,case rates
ggplot(mnation, aes(x=reorder(date,totalconfirmed),group =1)) +
geom_line(aes(y = totalconfirmed), color = "darkred") +
geom_line(aes(y = totaldeceased), color="steelblue")+
theme(axis.text.x = element_text(angle = 90))
#death,recovery,case rates
ggplot(mnation, aes(x=reorder(date,totalconfirmed),group =1)) +
geom_line(aes(y = totalconfirmed), color = "darkred") +
geom_line(aes(y = totaldeceased), color="steelblue")+
geom_line(aes(y = totalrecovered), color="Yellow")+
theme(axis.text.x = element_text(angle = 90))
#death,recovery,case rates
ggplot(mnation, aes(x=reorder(date,totalconfirmed),group =1)) +
geom_line(aes(y = totalconfirmed), color = "darkred") +
geom_line(aes(y = totaldeceased), color="steelblue")+
geom_line(aes(y = totalrecovered), color="Green")+
theme(axis.text.x = element_text(angle = 90))
#death,recovery,case rates
ggplot(mnation, aes(x=reorder(date,totalconfirmed),group =1)) +
geom_line(aes(y = totalconfirmed,size=2), color = "darkred") +
geom_line(aes(y = totaldeceased), color="steelblue")+
geom_line(aes(y = totalrecovered), color="Green")+
theme(axis.text.x = element_text(angle = 90))
#death,recovery,case rates
ggplot(mnation, aes(x=reorder(date,totalconfirmed),group =1)) +
geom_line(aes(y = totalconfirmed,size=1.2), color = "darkred") +
geom_line(aes(y = totaldeceased), color="steelblue")+
geom_line(aes(y = totalrecovered), color="Green")+
theme(axis.text.x = element_text(angle = 90))
#death,recovery,case rates
ggplot(mnation, aes(x=reorder(date,totalconfirmed),group =1)) +
geom_line(aes(y = totalconfirmed,size=1), color = "darkred") +
geom_line(aes(y = totaldeceased), color="steelblue")+
geom_line(aes(y = totalrecovered), color="Green")+
theme(axis.text.x = element_text(angle = 90))
#death,recovery,case rates
ggplot(mnation, aes(x=reorder(date,totalconfirmed),group =1)) +
geom_line(aes(y = totalconfirmed,size=.5), color = "darkred") +
geom_line(aes(y = totaldeceased), color="steelblue")+
geom_line(aes(y = totalrecovered), color="Green")+
theme(axis.text.x = element_text(angle = 90))
#death,recovery,case rates
ggplot(mnation, aes(x=reorder(date,totalconfirmed),group =1)) +
geom_line(aes(y = totalconfirmed,size=.2), color = "darkred") +
geom_line(aes(y = totaldeceased), color="steelblue")+
geom_line(aes(y = totalrecovered), color="Green")+
theme(axis.text.x = element_text(angle = 90))
#death,recovery,case rates
ggplot(mnation, aes(x=reorder(date,totalconfirmed),group =1)) +
geom_line(aes(y = totalconfirmed), color = "darkred") +
geom_line(aes(y = totaldeceased), color="steelblue")+
geom_line(aes(y = totalrecovered), color="Green")+
theme(axis.text.x = element_text(angle = 90))
#death,recovery,case rates
ggplot(mnation, aes(x=reorder(date,totalconfirmed),group =1)) +
geom_line(aes(y = totalconfirmed),size=2, color = "darkred") +
geom_line(aes(y = totaldeceased), color="steelblue")+
geom_line(aes(y = totalrecovered), color="Green")+
theme(axis.text.x = element_text(angle = 90))
#death,recovery,case rates
ggplot(mnation, aes(x=reorder(date,totalconfirmed),group =1)) +
geom_line(aes(y = totalconfirmed),size=2, color = "darkred") +
geom_line(aes(y = totaldeceased), size=2,color="steelblue")+
geom_line(aes(y = totalrecovered), size=2,color="Green")+
theme(axis.text.x = element_text(angle = 90))
#death,recovery,case rates
ggplot(mnation, aes(x=reorder(date,totalconfirmed),group =1)) +
theme_bw()+
geom_line(aes(y = totalconfirmed),size=2, color = "darkred") +
geom_line(aes(y = totaldeceased), size=2,color="steelblue")+
geom_line(aes(y = totalrecovered), size=2,color="Green")+
theme(axis.text.x = element_text(angle = 90))
#death,recovery,case rates
ggplot(mnation, aes(x=reorder(date,totalconfirmed),group =1)) +
theme_bw()+
geom_line(aes(y = totalconfirmed),size=2, color = "steelblue") +
geom_line(aes(y = totaldeceased), size=2,color="darked")+
geom_line(aes(y = totalrecovered), size=2,color="Green")+
theme(axis.text.x = element_text(angle = 90))
#death,recovery,case rates
ggplot(mnation, aes(x=reorder(date,totalconfirmed),group =1)) +
theme_bw()+
geom_line(aes(y = totalconfirmed),size=2, color = "steelblue") +
geom_line(aes(y = totaldeceased), size=2,color="darkred")+
geom_line(aes(y = totalrecovered), size=2,color="Green")+
theme(axis.text.x = element_text(angle = 90))
#death,recovery,case rates
ggplot(mnation, aes(x=reorder(date,totalconfirmed),group =1)) +
theme_bw()+
geom_line(aes(y = totalconfirmed),size=2, color = "steelblue") +
geom_line(aes(y = totaldeceased), size=2,color="darkred")+
geom_line(aes(y = totalrecovered), size=2,color="Green")+
theme(axis.text.x = element_text(angle = 90))+
labs(x = "date", y = "number of people", title = ' Cornavirus Evolution (India) ')
View(geo_state)
View(data)
View(nation_lvl)
View(state_lvl)
#gender distribution
patients_data <- read.csv("patients_data.csv")
str(patients_data)
patients_data$current_status <- as.factor(patients_data$current_status)
patients_data$gender <- as.factor(patients_data$gender)
patients_data$current_status <- as.factor(patients_data$current_status)
patients_data$gender <- as.factor(patients_data$gender)
patients_data$state <-as.factor(patients_data$state)
str(patients_data)
ggplot(patients_data, aes(x=gender, fill=current_status))+
theme_bw()+
geom_bar()+
labs(title = "Case through January to May", x="gender", y="cases")+
theme(legend.position="none")+
ggplot(patients_data, aes(x=gender, fill=current_status))+
theme_bw()+
geom_bar()+
labs(title = "Case through January to May", x="gender", y="cases")+
theme(legend.position="none")
ggplot(patients_data, aes(x=gender, fill=current_status))+
theme_bw()+
geom_bar()+
labs(title = "Case through January to May", x="gender", y="cases")+
theme(legend.position="none")
ggplot(patients_data, aes(x=gender, fill=current_status))+
theme_bw()+
geom_bar()+
labs(title = "Case through January to May", x="gender", y="cases")+
ggplot(patients_data, aes(x=gender, fill=current_status))+
theme_bw()+
geom_bar()+
labs(title = "Case through January to May", x="gender", y="cases")
ggplot(patients_data, aes(x=gender, fill=current_status))+
theme_bw()+
geom_bar()+
labs(title = "Case through January to May", x="gender", y="cases")
View(patients_data)
ggplot(patients_data, aes(x=reorder(gender, current_status), fill=current_status))+
theme_bw()+
geom_bar()+
labs(title = "Case through January to May", x="gender", y="cases")
ggplot(patients_data, aes(x=gender), fill=current_status))+
theme_bw()+
geom_bar()+
labs(title = "Case through January to May", x="gender", y="cases")
ggplot(patients_data, aes(x=gender), fill=current_status))+
theme_bw()+
geom_bar()+
labs(title = "Case through January to May", x="gender", y="cases")
ggplot(patients_data, aes(x=gender, fill=current_status))+
theme_bw()+
geom_bar()+
labs(title = "Case through January to May", x="gender", y="cases")
ggplot(patients_data, aes(x=gender, fill=current_status))+
theme_bw()+
geom_bar()+
labs(title = "Infected demograph based on Sex", x="gender", y="cases")
ggplot(patients_data, aes(x=gender, fill=current_status))+
theme_bw()+
geom_bar()+
labs(title = "Infected demograph based on their Gender", x="gender", y="cases")
View(new)
View(patients_data)
theme_bw()+
geom_bar()+
labs(title = "Infected demograph based on their Gender", x="gender", y="cases")
theme_bw()+
ggplot(patients_data, aes(x=gender, fill=current_status))+
facet_wrap(~ state)
theme_bw()+
geom_bar()+
labs(title = "Infected demograph based on their Gender", x="gender", y="cases")
ggplot(patients_data, aes(x=gender, fill=current_status))+
facet_wrap(~ state)+
theme_bw()+
geom_bar()+
labs(title = "Infected demograph based on their Gender", x="gender", y="cases")
View(state_lvl)
View(nation_lvl)
View(state_lvl)
